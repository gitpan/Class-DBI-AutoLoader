.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AutoLoader 3"
.TH AutoLoader 3 "2003-10-10" "perl v5.8.0" "User Contributed Perl Documentation"
.SH "NAME"
Class::DBI::AutoLoader \- Generates Class::DBI subclasses dynamically.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&  use Class::DBI::AutoLoader (
\&        dsn       => 'dbi:mysql:database',
\&        username  => 'username',
\&        password  => 'passw0rd',
\&        options   => { RaiseError => 1 },
\&        namespace => 'Data'
\&  );
.Ve
.PP
.Vb 1
\&  my $row = Data::FavoriteFilms->retrieve(1);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Class::DBI::AutoLoader scans the tables in a given database,
and auto-generates the Class::DBI classes. These are loaded into
your package when you import Class::DBI::AutoLoader, as though
you had created the Data::FavoriteFilms class and \*(L"use\*(R"d that
directly.
.SH "NOTE"
.IX Header "NOTE"
Class::DBI::AutoLoader messes with your table names to make them
look more like regular class names. Specifically it turns table_name
into TableName. The actual function is just:
.PP
.Vb 1
\& $table = join('', map { ucfirst($_) } split(/[^a-zA-Z0-9]/, $table));
.Ve
.SH "WARNING"
.IX Header "WARNING"
I haven't tested this with any database but MySQL. Let me know if you 
use it with PostgreSQL or SQLite. Success or failure.
.SH "OPTIONS"
.IX Header "OPTIONS"
Options that can be used in the import:
.IP "\(bu dsn" 4
.IX Item "dsn"
The standard \s-1DBI\s0 style \s-1DSN\s0 that you always pass.
.IP "\(bu username" 4
.IX Item "username"
The username for the database.
.IP "\(bu password" 4
.IX Item "password"
The password for the database.
.IP "\(bu options" 4
.IX Item "options"
A hashref of options such as you'd pass to the \s-1DBI\-\s0>\fIconnect()\fR method.
This can contain any option that is valid for your database.
.IP "\(bu namespace" 4
.IX Item "namespace"
The master namespace you would like your packages declared in. See the
example above.
.IP "\(bu additional_packages" 4
.IX Item "additional_packages"
An array reference of additional packages you would like each class to \*(L"use\*(R".
For example:
.Sp
.Vb 4
\& use Class::DBI::AutoLoader (
\&        ...
\&        additional_packages => ['Class::DBI::AbstractSearch']
\& );
.Ve
.Sp
This allows you to use Class::DBI plugins or other assorted goodies in the
generated class.
.SH "SUPPORTED DATABASES"
.IX Header "SUPPORTED DATABASES"
Currently this module supports MySQL, PostgreSQL, and SQLite.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Class::DBI, Class::DBI::mysql, Class::DBI::Pg, Class::DBI::SQLite
.SH "AUTHOR"
.IX Header "AUTHOR"
Ryan Parr, <ryanparr@thejamescompany.com>
.PP
This software is based off the original work performed by
Ikebe Tomohiro on the Class::DBI::Loader module.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself. 
